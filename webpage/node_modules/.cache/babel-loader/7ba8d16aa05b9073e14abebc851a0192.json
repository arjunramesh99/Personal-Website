{"ast":null,"code":"import _slicedToArray from \"/home/arjun/Documents/programming/Personal-Website/webpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/arjun/Documents/programming/Personal-Website/webpage/src/components/HomePage.js\";\nimport React, { useState } from 'react';\nimport ReactContactForm from 'react-mail-form';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DP from \"./images/Home/DP.jpg\";\nimport InfoCard from \"./utlilty/InfoCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport Alert from '@material-ui/lab/Alert';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport emailjs from 'emailjs-com';\nconst useStyles = makeStyles(theme => ({\n  contact: {\n    minWidth: 1000,\n    minHeight: 1000\n  },\n  dp: {\n    width: \"100%\",\n    //height: \"100%\",\n    borderRadius: 50\n  },\n  home: {\n    padding: 20\n  },\n  bio: {\n    padding: 20,\n    paddingLeft: 50,\n    paddingRight: 50\n  },\n  connect: {\n    fontSize: 28,\n    fontFamily: \"Garamond\",\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  connect_card: {\n    padding: 30,\n    background: 'white'\n  },\n  name: {\n    marginBottom: 20,\n    fontSize: 28,\n    fontWeight: 'bold'\n  },\n  input: {\n    marginTop: 20,\n    marginLeft: 40,\n    minWidth: 300,\n    width: 300\n  },\n  name_input: {\n    marginTop: 20,\n    marginLeft: 40,\n    minWidth: 200,\n    width: 200\n  },\n  input2: {\n    marginTop: 20,\n    marginLeft: 40,\n    minWidth: 400,\n    width: 450\n  },\n  send_button: {\n    marginTop: 20,\n    marginLeft: '40%'\n  },\n  bgd_img: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\"\n  }\n}));\nexport default function HomePage() {\n  const classes = useStyles();\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        message = _useState4[0],\n        setMessage = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        send = _useState6[0],\n        setSend = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        name = _useState8[0],\n        setName = _useState8[1];\n\n  const handleSendClick = () => {\n    if (!message) {\n      return;\n    }\n\n    let templateParams = {\n      from_name: name || \"Anonymous\",\n      from_email: email || \"anon@anonymous.com\",\n      to_name: \"arjun99ramesh@gmail.com\",\n      message_html: message\n    };\n    {\n      /* EmailJS send */\n    }\n    emailjs.send('gmail', 'template_9NtASnHN', templateParams, 'user_T5p9A23J1pcu9YJEMjXdw').then(function (response) {\n      console.log(\"Success\");\n      setSend(true);\n    }, function (err) {\n      console.log(\"Failed\");\n    });\n    {\n      /* Reset fields */\n    }\n    setEmail('');\n    setMessage('');\n    setName('');\n  };\n\n  const handleCloseAlert = () => {\n    setSend(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: classes.bgd_img,\n    src: DP,\n    alt: \"DP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    direction: \"row-reverse\",\n    justify: \"center\",\n    className: classes.home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    align: \"center\",\n    className: classes.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Arjun Ramesh\"), React.createElement(InfoCard, {\n    title: \"Bio\",\n    className: classes.bio,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"An essay is, generally, a piece of writing that gives the author's own argument \\u2014 but the definition is vague, overlapping with those of a paper, an article, a pamphlet, and a short story. Essays have traditionally been sub-classified as formal and informal. Formal essays are characterized by \\\"serious purpose, dignity, logical organization, length,\\\" whereas the informal essay is characterized by \\\"the personal element (self-revelation, individual tastes and experiences, confidential manner), humor, graceful style, rambling structure, unconventionality or novelty of theme,\\\" etc.[1] Essays are commonly used as literary criticism, political manifestos, learned arguments, observations of daily life, recollections, and reflections of the author. Almost all modern essays are written in prose, but works in verse have been dubbed essays (e.g., Alexander Pope's An Essay on Criticism and An Essay on Man). While brevity usually defines an essay, voluminous works like John Locke's An Essay Concerning Human Understanding and Thomas Malthus's An Essay on the Principle of Population are counterexamples.\"))), React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: classes.dp,\n    src: DP,\n    alt: \"Display pic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(Card, {\n    raised: true,\n    className: classes.connect_card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.connect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Send me a message!\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.input,\n    id: \"emailid\",\n    label: \"Email Address\",\n    variant: \"outlined\",\n    placeholder: \"eg: abc@example.com\",\n    size: \"small\",\n    value: email,\n    onChange: event => setEmail(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.input,\n    id: \"fnid\",\n    label: \"Name\",\n    variant: \"outlined\",\n    placeholder: \"eg: John\",\n    size: \"small\",\n    value: name,\n    onChange: event => setName(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.input2,\n    id: \"messageid\",\n    label: \"Message\",\n    variant: \"outlined\",\n    multiline: true,\n    rows: 3,\n    placeholder: \"My name is abc, and I want to connect with you!\",\n    size: \"small\",\n    required: true,\n    value: message,\n    onChange: event => setMessage(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  })), React.createElement(Button, {\n    className: classes.send_button,\n    variant: \"contained\",\n    endIcon: React.createElement(MailOutlineIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }),\n    onClick: handleSendClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"Send\")))), React.createElement(Snackbar, {\n    open: send,\n    autoHideDuration: 5000,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'right'\n    },\n    onClose: handleCloseAlert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    variant: \"filled\",\n    severity: \"success\",\n    onClose: handleCloseAlert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \"Message sent!\")));\n}","map":{"version":3,"sources":["/home/arjun/Documents/programming/Personal-Website/webpage/src/components/HomePage.js"],"names":["React","useState","ReactContactForm","makeStyles","TextField","DP","InfoCard","Grid","Card","Typography","Button","MailOutlineIcon","Alert","Snackbar","emailjs","useStyles","theme","contact","minWidth","minHeight","dp","width","borderRadius","home","padding","bio","paddingLeft","paddingRight","connect","fontSize","fontFamily","fontWeight","textAlign","connect_card","background","name","marginBottom","input","marginTop","marginLeft","name_input","input2","send_button","bgd_img","position","top","left","HomePage","classes","email","setEmail","message","setMessage","send","setSend","setName","handleSendClick","templateParams","from_name","from_email","to_name","message_html","then","response","console","log","err","handleCloseAlert","event","target","value","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport ReactContactForm from 'react-mail-form';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DP from \"./images/Home/DP.jpg\"\nimport InfoCard from \"./utlilty/InfoCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport Alert from '@material-ui/lab/Alert';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport emailjs from 'emailjs-com';\n\nconst useStyles = makeStyles(theme => ({\n    contact: {\n        minWidth: 1000,\n        minHeight: 1000,\n    },\n    dp: {\n        width: \"100%\",\n        //height: \"100%\",\n        borderRadius: 50,\n    },\n    home: {\n        padding: 20,\n    },\n    bio: {\n        padding: 20,\n        paddingLeft: 50,\n        paddingRight: 50\n    },\n    connect: {\n        fontSize: 28,\n        fontFamily: \"Garamond\",\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n    connect_card: {\n        padding: 30,\n        background: 'white'\n    },\n    name: {\n        marginBottom: 20,\n        fontSize: 28,\n        fontWeight: 'bold'\n    },\n    input: {\n        marginTop: 20,\n        marginLeft: 40,\n        minWidth: 300,\n        width: 300,\n    },\n    name_input: {\n        marginTop: 20,\n        marginLeft: 40,\n        minWidth: 200,\n        width: 200,\n    },\n    input2: {\n        marginTop: 20,\n        marginLeft: 40,\n        minWidth: 400,\n        width: 450,\n    },\n    send_button: {\n        marginTop: 20,\n        marginLeft: '40%',\n    },\n    bgd_img: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n    }\n}));\n\nexport default function HomePage() {\n    const classes = useStyles();\n    const [email, setEmail] = useState('');\n    const [message, setMessage] = useState('');\n    const [send, setSend] = useState(false);\n    const [name, setName] = useState('');\n\n    const handleSendClick = () => {\n        if (!message) {\n            return;\n        }\n        let templateParams = {\n            from_name: (name || \"Anonymous\"),\n            from_email: (email || \"anon@anonymous.com\"),\n            to_name: \"arjun99ramesh@gmail.com\",\n            message_html: message,\n        }\n\n        {/* EmailJS send */}\n        emailjs.send('gmail','template_9NtASnHN',\n            templateParams, 'user_T5p9A23J1pcu9YJEMjXdw')\n            .then(function(response) {\n                console.log(\"Success\");\n                setSend(true);\n            }, function(err) {\n                console.log(\"Failed\");\n            });\n\n        {/* Reset fields */}\n        setEmail('');\n        setMessage('');\n        setName('');\n    }\n\n    const handleCloseAlert = () => {\n        setSend(false);\n    }\n\n    return (\n        <div>\n            <img className={classes.bgd_img} src={DP} alt=\"DP\" />\n            <Grid container spacing={5} direction=\"row-reverse\" justify=\"center\" className={classes.home}>\n                <Grid item xs={8}>\n                    <div>\n                        <Typography align='center' className={classes.name}>\n                            Arjun Ramesh\n                        </Typography>\n                        <InfoCard title=\"Bio\" className={classes.bio}>\n                            An essay is, generally, a piece of writing that gives the author's own argument — but the\n                            definition\n                            is vague, overlapping with those of a paper, an article, a pamphlet, and a short story.\n                            Essays\n                            have\n                            traditionally been sub-classified as formal and informal. Formal essays are characterized by\n                            \"serious purpose, dignity, logical organization, length,\" whereas the informal essay is\n                            characterized by \"the personal element (self-revelation, individual tastes and experiences,\n                            confidential manner), humor, graceful style, rambling structure, unconventionality or\n                            novelty of\n                            theme,\" etc.[1]\n\n                            Essays are commonly used as literary criticism, political manifestos, learned arguments,\n                            observations of daily life, recollections, and reflections of the author. Almost all modern\n                            essays\n                            are written in prose, but works in verse have been dubbed essays (e.g., Alexander Pope's An\n                            Essay on\n                            Criticism and An Essay on Man). While brevity usually defines an essay, voluminous works\n                            like\n                            John\n                            Locke's An Essay Concerning Human Understanding and Thomas Malthus's An Essay on the\n                            Principle\n                            of\n                            Population are counterexamples.\n                        </InfoCard>\n                    </div>\n                </Grid>\n                <Grid item xs={3}>\n                    <img className={classes.dp} src={DP} alt=\"Display pic\"/>\n                </Grid>\n                <Grid item xs={5}>\n                    <Card raised className={classes.connect_card}>\n                        <div className={classes.connect}>\n                            Send me a message!\n                        </div>\n                        <div>\n                            <TextField className={classes.input}\n                                       id=\"emailid\"\n                                       label=\"Email Address\"\n                                       variant=\"outlined\"\n                                       placeholder=\"eg: abc@example.com\"\n                                       size=\"small\"\n                                       value={email}\n                                       onChange={(event) => setEmail(event.target.value)}\n                            />\n                        </div>\n                        <div>\n                            <TextField className={classes.input}\n                                       id=\"fnid\"\n                                       label=\"Name\"\n                                       variant=\"outlined\"\n                                       placeholder=\"eg: John\"\n                                       size=\"small\"\n                                       value={name}\n                                       onChange={(event) => setName(event.target.value)}\n                            />\n                            {/*<TextField className={classes.name_input}\n                                       id=\"lnid\"\n                                       label=\"Last Name\"\n                                       variant=\"outlined\"\n                                       placeholder=\"Smith\"\n                                       size=\"small\"\n                            />*/}\n                        </div>\n                        <div>\n                            <TextField className={classes.input2}\n                                       id=\"messageid\"\n                                       label=\"Message\"\n                                       variant=\"outlined\"\n                                       multiline\n                                       rows={3}\n                                       placeholder=\"My name is abc, and I want to connect with you!\"\n                                       size=\"small\"\n                                       required\n                                       value={message}\n                                       onChange={(event) => setMessage(event.target.value)}\n                            />\n                        </div>\n                        <Button className={classes.send_button}\n                                variant=\"contained\"\n                                endIcon={<MailOutlineIcon/>}\n                                onClick={handleSendClick}\n                        >\n                            Send\n                        </Button>\n                    </Card>\n\n                </Grid>\n\n            </Grid>\n            <Snackbar open={send}\n                      autoHideDuration={5000}\n                      anchorOrigin={{vertical: 'bottom', horizontal: 'right'}}\n                      onClose={handleCloseAlert}\n            >\n                <Alert variant=\"filled\" severity=\"success\" onClose={handleCloseAlert}>\n                    Message sent!\n                </Alert>\n            </Snackbar>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}