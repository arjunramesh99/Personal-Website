{"ast":null,"code":"var _jsxFileName = \"/home/arjun/Documents/programming/Personal-Website/webpage/src/components/Hobbies/Speedcubing.js\";\nimport React from 'react';\nimport Iframe from \"react-iframe\";\nimport DualPane from \"../utlilty/DualPane\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InfoCard from \"../utlilty/InfoCard\";\nimport Button from \"@material-ui/core/Button\";\nimport PersonIcon from '@material-ui/icons/Person';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport lime from \"@material-ui/core/colors/lime\";\nconst useStyles = makeStyles(theme => ({\n  link: {\n    position: 'absolute',\n    right: '5%',\n    bottom: '10%',\n    textTransform: 'none',\n    background: lime[600],\n    border: 'none',\n    borderRadius: 7,\n    minWidth: 50,\n    //270 + 2*nameMargin,\n    width: 90,\n    minHeight: 50,\n    height: 70 //marginLeft: 30,\n    //fontSize: 15,\n    //fontStyle: 'italic',\n    //fontWeight: 'bold',\n    //fontFamily: \"Garamond\",\n\n  }\n}));\nexport default function Speedcubing() {\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(DualPane, {\n    src1: \"https://www.youtube.com/embed/O0uQafYKUfs\",\n    src2: \"https://www.youtube.com/embed/O0uQafYKUfs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    style: {\n      padding: 20\n    },\n    container: true,\n    justify: \"space-evenly\",\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(InfoCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \" I have always loved solving puzzles. Started serious cubing at the age of 14.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \" Developed a lot of my own algorithms for easy memorization and solving.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), \" htrh\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \" \", React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Unofficial\"), \" personal records:\", React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \" 3x3: \", React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"10.2 s\"))), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \" 3x3 One-Handed: \", React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"19.5 s\"))), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \" 3x3 Blindfolded: \", React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"1:58 m\"))))), React.createElement(Button, {\n    className: classes.link,\n    href: \"https://www.worldcubeassociation.org/persons/2014RAME04\",\n    startIcon: React.createElement(PersonIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Official Profile\")))), React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(InfoCard, {\n    anec: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"I watched my friend, \", React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Angelo Zhang\"), \", from the Cubing Club at UT Austin set the world record for 3x3 Blindfolded with a 22.36 sec average!\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), \" I also judged a competitor solve 19 cubes blindfolded in 3x3 multiblind at nationals!\"))));\n}","map":{"version":3,"sources":["/home/arjun/Documents/programming/Personal-Website/webpage/src/components/Hobbies/Speedcubing.js"],"names":["React","Iframe","DualPane","Grid","InfoCard","Button","PersonIcon","makeStyles","lime","useStyles","theme","link","position","right","bottom","textTransform","background","border","borderRadius","minWidth","width","minHeight","height","Speedcubing","classes","padding"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Iframe from \"react-iframe\";\nimport DualPane from \"../utlilty/DualPane\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InfoCard from \"../utlilty/InfoCard\";\nimport Button from \"@material-ui/core/Button\";\nimport PersonIcon from '@material-ui/icons/Person';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport lime from \"@material-ui/core/colors/lime\";\n\nconst useStyles = makeStyles(theme => ({\n    link: {\n        position: 'absolute',\n        right: '5%',\n        bottom: '10%',\n        textTransform: 'none',\n        background: lime[600],\n        border: 'none',\n        borderRadius: 7,\n        minWidth: 50,//270 + 2*nameMargin,\n        width: 90,\n        minHeight: 50,\n        height: 70,\n        //marginLeft: 30,\n        //fontSize: 15,\n        //fontStyle: 'italic',\n        //fontWeight: 'bold',\n        //fontFamily: \"Garamond\",\n    },\n}));\n\nexport default function Speedcubing() {\n    const classes = useStyles();\n    return (\n        <div>\n            <DualPane src1=\"https://www.youtube.com/embed/O0uQafYKUfs\"\n                      src2=\"https://www.youtube.com/embed/O0uQafYKUfs\"\n            />\n            <Grid style={{padding: 20}} container justify=\"space-evenly\" spacing={3}>\n                <Grid item xs={7}>\n                    <InfoCard>\n                        <ul>\n                            <li> I have always loved solving puzzles. Started serious cubing at the age of 14.</li>\n                            <li> Developed a lot of my own algorithms for easy memorization and solving.\n                                <br/> htrh\n                            </li>\n                            <li> <i>Unofficial</i> personal records:\n                                <ul>\n                                    <li> 3x3: <i><b>10.2 s</b></i></li>\n                                    <li> 3x3 One-Handed: <i><b>19.5 s</b></i></li>\n                                    <li> 3x3 Blindfolded: <i><b>1:58 m</b></i></li>\n                                </ul>\n                            </li>\n                            <Button className={classes.link} href=\"https://www.worldcubeassociation.org/persons/2014RAME04\"  startIcon={<PersonIcon/>}>\n                                Official Profile\n                            </Button>\n                        </ul>\n\n                    </InfoCard>\n                </Grid>\n                <Grid item xs={5}>\n                    <InfoCard anec>\n                        I watched my friend, <i>Angelo Zhang</i>, from the Cubing Club at UT Austin\n                        set the world record for 3x3 Blindfolded with a 22.36 sec average!\n                        <br/> I also judged a competitor solve 19 cubes blindfolded in 3x3 multiblind at nationals!\n                    </InfoCard>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}